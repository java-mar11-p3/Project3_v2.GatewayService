<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
   		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.4.RELEASE</version>

  </parent>
  <artifactId>Project3_v2.GatewayService</artifactId>
  <packaging>jar</packaging>
  <name>Project3_v2.GatewayService Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
	<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-zuul</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
	    <dependency>
  	<groupId>org.springframework.boot</groupId>
  	<artifactId>spring-boot-starter-web</artifactId>
  </dependency>

  </dependencies>
  <build>
    <finalName>Project3_v2.GatewayService</finalName>
    <plugins>  
<!--         <plugin> -->
<!-- 				<groupId>io.fabric8</groupId> -->
<!-- 				<artifactId>docker-maven-plugin</artifactId> -->
<!-- 				<version>0.21.0</version> -->
<!-- 				<configuration> -->
<!-- 					linux, docker for windows -->
<!-- 					The docker-maven-plugin uses the Docker remote API so the URL of -->
<!-- 						your Docker Daemon must somehow be specified. The URL can be specified by  -->
<!-- 						the dockerHost or machine configuration, or by the DOCKER_HOST environment  -->
<!-- 						variable. -->
<!-- 					<dockerHost>tcp://192.168.99.100:2376</dockerHost> -->
<!-- 					<verbose>true</verbose> -->
<!-- 					<extensions>true</extensions> -->
<!-- 					Needed if pushing to docker hub : must store these in local env -->
<!-- 					Moved this in settings.xml inside .m2 folder -->
<!-- 					<authConfig> <username>sebenner</username> <password>password_123</password>  -->
<!-- 						</authConfig> -->
<!-- 					<images> -->
<!-- 						<image> -->
<!-- 							name of the image -->
<!-- 							<name>sebenner/project_03</name> -->
<!-- 							<build> -->
<!-- 								docker runs as daemon. CMD shud send all info to docker. Docker -->
<!-- 									looks in this folder and sub-folder to build -->
<!-- 								<dockerFileDir>${project.basedir}</dockerFileDir> -->
<!-- 								copies artifact to docker build dir in target -->
<!-- 								<assembly> -->
<!-- 									<descriptorRef>artifact</descriptorRef> -->
<!-- 								</assembly> -->
<!-- 								<tags> -->
<!-- 									<tag>latest</tag> -->
<!-- 								</tags> -->

<!-- 							</build> -->
<!-- 						</image> -->
<!-- 					</images> -->
<!-- 				</configuration> -->
<!-- 				<executions> -->
<!-- 					<execution> -->
<!-- 						<phase>package</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>build</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 					<execution> -->
<!-- 						<id>mydeploy</id> -->
<!-- 						<phase>deploy</phase> -->
<!-- 						<goals> -->
<!-- 							<goal>push</goal> -->
<!-- 						</goals> -->
<!-- 					</execution> -->
<!-- 				</executions> -->
<!-- 			</plugin> -->
<!-- 			<plugin> -->
<!-- 				<artifactId>maven-deploy-plugin</artifactId> -->
<!-- 				<configuration> -->
<!-- 					<skip>true</skip> -->
<!-- 				</configuration> -->
<!-- 			</plugin> -->
			
		</plugins>
  </build>
	  <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Greenwich.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
        </dependencyManagement>
</project>
